apiVersion: v1
kind: Template
labels:
  demo: coolstore-microservice
  template: coolstore
metadata:
  annotations:
    description: CoolStore demo microservices application template
    iconClass: icon-java
    tags: microservice,jboss,spring
  name: coolstore
objects:
# Netflix Turbine Server
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: turbine-server
    name: turbine-server
  spec:
    dockerImageRepository: docker.io/siamaksade/turbine-server # temporary till fabric8 images remove privillegd requirement
    tags:
    - name: "1.0.27"
      annotations:
        description: Fabric8 Turbine Server
        version: "1.0.27"
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: turbine-server
    name: turbine-server
  spec:
    replicas: 1
    selector:
      application: turbine-server
      deploymentconfig: turbine-server
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: turbine-server
          deploymentconfig: turbine-server
      spec:
        containers:
        - image: 'turbine-server'
          name: turbine-server
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          - containerPort: 9779
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - turbine-server
        from:
          kind: ImageStreamTag
          name: turbine-server:1.0.27
      type: ImageChange
  status:
    observedGeneration: 2
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: turbine-server
      application: turbine-server
    name: turbine-server
  spec:
    ports:
    - name: 80-tcp
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      application: turbine-server
      deploymentconfig: turbine-server
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      application: turbine-server
    name: turbine-server
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: turbine-server
      weight: 100
# Netflix Hystrix Dashboard
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: hystrix-dashboard
    name: hystrix-dashboard
  spec:
    dockerImageRepository: docker.io/siamaksade/hystrix-dashboard # temporary till fabric8 images remove privillegd requirement
    tags:
    - name: "1.0.27"
      annotations:
        description: Fabric8 Hystrix Dashboard
        version: "1.0.27"
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: hystrix-dashboard
    name: hystrix-dashboard
  spec:
    replicas: 1
    selector:
      application: hystrix-dashboard
      deploymentconfig: hystrix-dashboard
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: hystrix-dashboard
          deploymentconfig: hystrix-dashboard
      spec:
        containers:
        - image: 'hystrix-dashboard'
          name: hystrix-dashboard
          ports:
          - containerPort: 9779
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - hystrix-dashboard
        from:
          kind: ImageStreamTag
          name: hystrix-dashboard:1.0.27
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: hystrix-dashboard
      application: hystrix-dashboard
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name":"turbine-server","namespace":"","kind":"Service"}]'
    name: hystrix-dashboard
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      application: hystrix-dashboard
      deploymentconfig: hystrix-dashboard
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      application: hystrix-dashboard
    name: hystrix-dashboard
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: hystrix-dashboard
      weight: 100
parameters:
- description: Git source URI for application
  displayName: Git source repository
  name: GIT_URI
  required: true
  value: https://github.com/jbossdemocentral/coolstore-microservice
- displayName: Git branch/tag reference
  name: GIT_REF
  required: true
  value: master
- description: Maven mirror url. If nexus is deployed locally, use nexus url (e.g. http://nexus.ci:8081/content/groups/public/)
  displayName: Maven mirror url
  name: MAVEN_MIRROR_URL
- description: NPM mirror url. If nexus is deployed locally, use nexus url (e.g. http://nexus.ci:8081/repository/npm/)
  displayName: NPM mirror url
  name: NPM_MIRROR
- description: Bower mirror url. If nexus is deployed locally, use nexus url (e.g. http://nexus.ci:8081/repository/bower-mirror/)
  displayName: Bower mirror url
  name: BOWER_MIRROR
- description: Inventory Service database user name
  displayName: Inventory Database username
  from: user[a-zA-Z0-9]{3}
  generate: expression
  name: INVENTORY_DB_USERNAME
  required: true
- description: Inventory Service database user password
  displayName: Inventory Database password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: INVENTORY_DB_PASSWORD
  required: true
- description: Catalog Service database user name
  displayName: Catalog Database username
  from: user[a-zA-Z0-9]{3}
  generate: expression
  name: CATALOG_DB_USERNAME
  required: true
- description: Catalog Service database user password
  displayName: Catalog Database password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: CATALOG_DB_PASSWORD
  required: true
- description: Decision Server Username
  name: KIE_SERVER_USER
  required: true
  value: brmsAdmin
- description: Decision Server Password
  from: '[a-zA-Z]{6}[0-9]{1}!'
  generate: expression
  name: KIE_SERVER_PASSWORD
  required: true
- description: Decision Server Coolstore Rules Container Spec
  name: KIE_CONTAINER_DEPLOYMENT
  required: true
  value: CoolStoreRulesContainer=com.redhat:coolstore:2.0.0
